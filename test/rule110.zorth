mem 28 + 1 store8

0 while dup 30 < do 
	0 while dup 30 < do
		dup mem + load8 if 
			mem 30 + 42 store8  // 48 = '*'
		else
			mem 30 + 32 store8  // 32 = ' '
		end

		1 mem 30 + 1 1 syscall3 // write(1, mem + 30, 1);

		1 + 
	end
	drop

	mem 30 + 10 store8
	1 mem 30 + 1 1 syscall3 // fputc('\n', stdout);
	
	// int pattern = (board[0] << 1) | board[1]
	mem load8 1 shl
	mem 1 + load8 
	bor 
	
	1 while dup 28 < do
		// pattern = ((pattern << 1) & 7) | board[j + 1]
		swap 1 shl 7 band
		over mem + 1 + load8
		bor

		// board[j] = (110 >> pattern) & 1
		2dup 110 swap shr 1 band 
		swap mem + swap store8
		swap

		1 +
	end 

	drop // index
	drop // pattern

	1 +
end
